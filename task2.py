# Таблица умножения (все числа от 1 до n)

# 1. Задание выполнено в структурной парадигме (императивный стиль),
# для которой характерно последовательное исполнении структурированных “блоков” трёх типов: утверждение, ветвление и цикл.
# Плюсом такого стиля программирования является понятность кода, 
# последовательность выполнения, поэтому структурная парадигма была выбрана для решения этой задачи.

n = int(input('Введите n: '))
for i in range(1, n+1):
    for j in range(1, 10):
        print(i, '*', j, '=', i*j, end = '\n')
    print('', end='\n')

# 2. Задание выполнено в процедурной парадигме (императивный стиль),
# для которой характерно вынесение “блоков” кода в отдельные подпрограммы.
# Плюсом такого стиля программирования является возможность использования процедур много раз 
# с различными исходными данными, поэтому процедурная парадигма была выбрана для решения этой задачи.


def multiplication_table(n: int):
    for i in range(1, n+1):
        for j in range(1, 10):
            print(i, '*', j, '=', i*j, end = '\n')
        print('', end='\n')

multiplication_table(2)